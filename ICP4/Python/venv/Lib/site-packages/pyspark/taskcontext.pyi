# Stubs for pyspark.taskcontext (Python 3)
#

from typing import Any, Dict, List
from typing_extensions import Literal

class TaskContext:
    def __new__(cls) -> TaskContext: ...
    @classmethod
    def get(cls) -> TaskContext: ...
    def stageId(self) -> int: ...
    def partitionId(self) -> int: ...
    def attemptNumber(self) -> int: ...
    def taskAttemptId(self) -> int: ...
    def getLocalProperty(self, key: str) -> str: ...

BARRIER_FUNCTION = Literal[1]

class BarrierTaskContext(TaskContext):
    def __init__(self) -> None: ...
    @classmethod
    def get(cls) -> BarrierTaskContext: ...
    def barrier(self) -> None: ...
    def getTaskInfos(self) -> List[BarrierTaskInfo]: ...

class BarrierTaskInfo:
    address: str
    def __init__(self, address: str) -> None: ...
